# 0718

* Internet
컴퓨터 A와 컴퓨터 B가 통신하기 위해서는 네트워크가 필요. 물리적인 기계를 통해 두 개의 컴퓨터를 묶어야 한다.
일반적으로 소규모의 네트워크를 만드는 것은 LAN(Local Area Network)이라고 한다.
넓은 규모의 네트워크를 만드는 것을 WAN(Wide Area Network)라고 한다.
일반적으로 LAN을 구성해서 많이 사용한다.

인터넷은 네트워크의 네트워크이다.
인터넷은 전세계적으로 연결되어 있는 물리적인 망을 지칭한다.
데이터 통신을 하려면 IP 주소를 알아야 한다. (IP Address는 IPv4(32bit)와 IPv6(128bit)가 있다.)
논리적인 규칙에 의해 특정 IP 주소를 컴퓨터에 부여. 그러나 물리적인 주소(MAC Address)가 있어야 컴퓨터가 찾아갈 수 있다.
논리적인 주소(IP 주소)를 물리적인 주소(MAC 주소)로 바꿔주는 것이 ARP 프로토콜.
IP 주소는 NIC(Network Interface Card)에 할당하는 것.(컴퓨터에 부여되는 것이 아니다.)


* Protocol(프로토콜)
데이터를 주고 받기 위해서 지켜야 할 서로 정해 놓은 규칙들을 지칭한다. ex) HTTP, FTP, SMTP, TELNET, TCP/IP

* Port(포트)
프로세스를 지칭하는 것이 이 번호이다. IP address를 알면 NIC까지 접근 가능.
컴퓨터 내의 프로그램과 접속하기 위해서는 포트 번호가 필요하다.

즉, 하나의 프로세스(프로그램)이 다른 하나의 프로세스(프로그램)과 데이터 통신을 하려면 IP address, Port, Protocol 이 3가지를 알아야 한다.



* 소켓
소켓을 이용하면 네트워크 통신을 하기 위해서 우리가 알아야 하는 여러 가지 네트워크 하단의 복잡한 프로토콜과 상관없이 쉽게 프로그램을 작성할 수 있다.
소켓이라는 개념을 도입하면 하단에 뭐가 있든 상관없이 손쉽게 통신이 가능하다.
소켓만 만들면 소켓끼리 물려서 아주 쉽게 통신이 가능하다. 소켓 프로그래밍


* 자바 소켓
자바는 소켓을 추상화시킨 클래스를 제공해준다. 소켓을 통해 원하는 상대 프로세스와 통신 가능.
소켓 개념을 클래스로 모델링.
자바 -> 소켓 클래스 -> 어플리케이션의 데이터 통신을 쉽게 할 수 있다!
클라이언트는 능동적으로 접속을 하고 서버는 클라이언트의 접속을 기다린다.
서버 프로세스는 클라이언트의 접속을 기다리고 있다. 서버 쪽에서는 서버 소켓이라는 것이 있어야 한다. 서버 소켓에서 클라이언트의 접속을 감지하고 클라이언트와 서버의 소켓을 연결해준다.
연결된 클라이언트와 서버는 데이터 통신을 하고 서버 소켓은 계속해서 클라이언트의 접속을 기다린다.

* 자바 소켓 실습